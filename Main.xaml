<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>Internal</x:String>
      <x:String>Microsoft.CodeAnalysis</x:String>
      <x:String>Microsoft.CodeAnalysis.Diagnostics</x:String>
      <x:String>Microsoft.CodeAnalysis.Diagnostics.Telemetry</x:String>
      <x:String>Microsoft.CodeAnalysis.Emit</x:String>
      <x:String>Microsoft.CodeAnalysis.FlowAnalysis</x:String>
      <x:String>Microsoft.CodeAnalysis.Operations</x:String>
      <x:String>Microsoft.CodeAnalysis.Text</x:String>
      <x:String>Microsoft.CodeAnalysis.VisualBasic</x:String>
      <x:String>Microsoft.CodeAnalysis.VisualBasic.Syntax</x:String>
      <x:String>Microsoft.CSharp</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Microsoft.VisualBasic.FileIO</x:String>
      <x:String>Microsoft.Win32.SafeHandles</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.DurableInstancing</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Hosting</x:String>
      <x:String>System.Activities.ParallelTracking</x:String>
      <x:String>System.Activities.Persistence</x:String>
      <x:String>System.Activities.Runtime</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.Runtime.DurableInstancing</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Statements.Tracking</x:String>
      <x:String>System.Activities.Tracking</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Buffers</x:String>
      <x:String>System.Buffers.Binary</x:String>
      <x:String>System.Buffers.Text</x:String>
      <x:String>System.CodeDom</x:String>
      <x:String>System.CodeDom.Compiler</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Concurrent</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.ComponentModel.Design</x:String>
      <x:String>System.ComponentModel.Design.Serialization</x:String>
      <x:String>System.Configuration.Assemblies</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Data.Common</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Diagnostics.CodeAnalysis</x:String>
      <x:String>System.Diagnostics.Contracts</x:String>
      <x:String>System.Diagnostics.SymbolStore</x:String>
      <x:String>System.Diagnostics.Tracing</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.IO.Enumeration</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Linq.Expressions.Interpreter</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Reflection.Emit</x:String>
      <x:String>System.Reflection.Metadata</x:String>
      <x:String>System.Resources</x:String>
      <x:String>System.Runtime</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>System.Runtime.ConstrainedExecution</x:String>
      <x:String>System.Runtime.ExceptionServices</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.InteropServices.ComTypes</x:String>
      <x:String>System.Runtime.InteropServices.Marshalling</x:String>
      <x:String>System.Runtime.InteropServices.ObjectiveC</x:String>
      <x:String>System.Runtime.Intrinsics</x:String>
      <x:String>System.Runtime.Intrinsics.Arm</x:String>
      <x:String>System.Runtime.Intrinsics.Wasm</x:String>
      <x:String>System.Runtime.Intrinsics.X86</x:String>
      <x:String>System.Runtime.Loader</x:String>
      <x:String>System.Runtime.Remoting</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.Versioning</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Security.Authentication.ExtendedProtection</x:String>
      <x:String>System.Security.Cryptography</x:String>
      <x:String>System.Security.Permissions</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Text.Unicode</x:String>
      <x:String>System.Threading</x:String>
      <x:String>System.Threading.Tasks</x:String>
      <x:String>System.Threading.Tasks.Sources</x:String>
      <x:String>System.Timers</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Resolvers</x:String>
      <x:String>System.Xml.Schema</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>System.Xml.Xsl</x:String>
      <x:String>System.Xml.Xsl.Runtime</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Workflow.Runtime</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.Data.Odbc</x:String>
      <x:String>System.Data.SqlClient</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Net.Security</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CodeAnalysis</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.PowerShell.Commands.Diagnostics</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Registry</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Concurrent</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.SQLite</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.EventLog</AssemblyReference>
      <AssemblyReference>System.Diagnostics.FileVersionInfo</AssemblyReference>
      <AssemblyReference>System.Diagnostics.PerformanceCounter</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.Diagnostics.StackTrace</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TextWriterTraceListener</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TraceSource</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.MemoryMappedFiles</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.Pipes</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.Security</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Resources.Writer</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.VisualC</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Claims</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.Pkcs</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.ProtectedData</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Security.Principal.Windows</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>System.Text.Encodings.Web</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Threading</AssemblyReference>
      <AssemblyReference>System.Threading.AccessControl</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Parallel</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xml.XPath.XDocument</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Witrics.SQLite.Activities</AssemblyReference>
      <AssemblyReference>Witrics.SQLite.Shared</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>Microsoft.Extensions.DependencyModel</AssemblyReference>
      <AssemblyReference>System.Data.Odbc</AssemblyReference>
      <AssemblyReference>Garmin Connect Sync.Core</AssemblyReference>
      <AssemblyReference>UiPath.AmazonWebServices</AssemblyReference>
      <AssemblyReference>UiPath.AmazonWebServices.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="1128,4636" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strUserPath" />
      <Variable x:TypeArguments="x:String" Name="strScript1Parameters" />
      <Variable x:TypeArguments="x:String" Name="strDesktopPath" />
      <Variable x:TypeArguments="x:String" Name="strScript1FileName" />
      <Variable x:TypeArguments="x:String" Name="strLocalAppDataPath" />
      <Variable x:TypeArguments="x:String" Name="strPythonPath" />
      <Variable x:TypeArguments="x:Boolean" Name="boolExists" />
      <Variable x:TypeArguments="s:String[]" Name="arrDBNames" />
      <Variable x:TypeArguments="x:String" Name="strScript2FileName" />
      <Variable x:TypeArguments="x:String" Name="strCSVOutputFolderName" />
      <Variable x:TypeArguments="s:String[]" Name="arrCSVFiles" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtdaily_summary_filtered" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtmonitoring_hr_filtered" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtmonitoring" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtmonitoring_rr_filtered" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtsleep_filtered" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtresting_hr_filtered" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtstress_filtered" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtsleep_events_filtered" />
      <Variable x:TypeArguments="x:String" Name="strmonitoring" />
      <Variable x:TypeArguments="x:String" Name="strmonitoring_hr" />
      <Variable x:TypeArguments="x:String" Name="strmonitoring_rr" />
      <Variable x:TypeArguments="x:String" Name="strdaily_summary" />
      <Variable x:TypeArguments="x:String" Name="strresting_hr" />
      <Variable x:TypeArguments="x:String" Name="strsleep" />
      <Variable x:TypeArguments="x:String" Name="strstress" />
      <Variable x:TypeArguments="x:String" Name="strsleep_events" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtmonitoring_filtered" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtmonitoring_hr" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtmonitoring_rr" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtdaily_summary" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtresting_hr" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtsleep" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtstress" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtsleep_events" />
      <Variable x:TypeArguments="x:Int32" Name="intDays" />
      <Variable x:TypeArguments="x:String" Name="strDBType" />
      <Variable x:TypeArguments="x:String" Name="strScript3FileName" />
      <Variable x:TypeArguments="x:String" Name="strInfluxBucket" />
      <Variable x:TypeArguments="s:String[]" Name="arrCSVNames" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign sap2010:Annotation.AnnotationText="Initialise variables that will be needed in the flow" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="479,520" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">strDesktopPath</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">Environment.GetFolderPath(Environment.SpecialFolder.Desktop)</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">strLocalAppDataPath</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData)</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">strUserPath</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">Environment.GetFolderPath(Environment.SpecialFolder.UserProfile)</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">strPythonPath</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">strLocalAppDataPath + "\\Programs\\Python\\Python313\\python.exe"</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:String[]">
                <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">arrDBNames</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:String[]">
                <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">new string[] { "garmin_monitoring.db", "garmin.db"}</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">strCSVOutputFolderName</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">CSVOutputs</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:String[]">
                <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_116">arrCSVNames</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:String[]">
                <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_403" xml:space="preserve">new string[] { "Monitoring",
"Heart Rate", 
"Respiration Rate", 
"Daily Summary", 
"Resting Heart Rate", 
"Sleep", 
"Stress",
"Sleep Events"}</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:String[]">
                <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">arrCSVFiles</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:String[]">
                <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_354" xml:space="preserve">new string[] { "monitoring.csv",
"monitoring_hr.csv", 
"monitoring_rr.csv", 
"daily_summary.csv", 
"resting_hr.csv", 
"sleep.csv", 
"stress.csv",
"sleep_events.csv"}</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">strScript1FileName</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">"garmindb_cli.py"</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">strScript2FileName</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">sqlitetocsv.py</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_114">strScript3FileName</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">upload_to_influx.py</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_115">strInfluxBucket</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">Garmin Connect</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Garmin Connect Sync Days" CacheStrategy="None" DisplayName="Get Asset" FolderPath="soutiessandbox" sap:VirtualizedContainerService.HintSize="479,175" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Int32">
          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_125">intDays</CSharpReference>
        </OutArgument>
      </ui:GetRobotAsset.Value>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Garmin DB Type" CacheStrategy="None" DisplayName="Get Asset" FolderPath="soutiessandbox" sap:VirtualizedContainerService.HintSize="479,175" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_126">strDBType</CSharpReference>
        </OutArgument>
      </ui:GetRobotAsset.Value>
    </ui:GetRobotAsset>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="479,84" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">"Check if first run"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:PathExists Resource="{x:Null}" sap2010:Annotation.AnnotationText="Check if the script log file already exists if it doesn't we know its a first run and need to use different parameters." DisplayName="SQLite DB Exists" sap:VirtualizedContainerService.HintSize="479,189" sap2010:WorkflowViewState.IdRef="PathExists_1" PathType="File">
      <ui:PathExists.Exists>
        <OutArgument x:TypeArguments="x:Boolean">
          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">boolExists</CSharpReference>
        </OutArgument>
      </ui:PathExists.Exists>
      <ui:PathExists.Path>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_398">strUserPath + "\\HealthData\\DBs\\garmin.db"</CSharpValue>
        </InArgument>
      </ui:PathExists.Path>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:PathExists>
    <If sap2010:Annotation.AnnotationText="Check if the script log file already exists if it doesn't we know its a first run and need to use different parameters." DisplayName="If first run" sap:VirtualizedContainerService.HintSize="479,1061" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">boolExists == true</CSharpValue>
        </InArgument>
      </If.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,369" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,173" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace">
            <ui:LogMessage.Message>
              <InArgument x:TypeArguments="x:Object">
                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">"Subsequent Run"</CSharpValue>
              </InArgument>
            </ui:LogMessage.Message>
          </ui:LogMessage>
          <Assign sap2010:Annotation.AnnotationText="File exists" sap:VirtualizedContainerService.HintSize="434,136" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">strScript1Parameters</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">--sleep --rhr --monitoring --activities --download --import --analyze --latest</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,512" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,173" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info">
            <ui:LogMessage.Message>
              <InArgument x:TypeArguments="x:Object">
                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">"First run"</CSharpValue>
              </InArgument>
            </ui:LogMessage.Message>
          </ui:LogMessage>
          <Assign sap2010:Annotation.AnnotationText="First Run" sap:VirtualizedContainerService.HintSize="434,145" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">strScript1Parameters</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">--sleep --rhr --monitoring --activities --download --import --analyze</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" sap2010:Annotation.AnnotationText="Create the output folder" DisplayName="Create CSV Folder" sap:VirtualizedContainerService.HintSize="434,134" sap2010:WorkflowViewState.IdRef="CreateDirectory_1">
            <ui:CreateDirectory.Path>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">strDesktopPath +"\\"+strCSVOutputFolderName</CSharpValue>
              </InArgument>
            </ui:CreateDirectory.Path>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CreateDirectory>
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="479,84" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">"Run Garmin Script: "+ strPythonPath + " \"" + strDesktopPath + "\\" + strScript1FileName + "\" " + strScript1Parameters</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:StartProcess WorkingDirectory="{x:Null}" sap2010:Annotation.AnnotationText="Run the garmin python script that pulls data from garmin connect" DisplayName="Start Process" sap:VirtualizedContainerService.HintSize="479,114" sap2010:WorkflowViewState.IdRef="StartProcess_5" StartType="Synchronously" Timeout="999999999">
      <ui:StartProcess.Arguments>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_322">strDesktopPath + "\\" + strScript1FileName + " " + strScript1Parameters</CSharpValue>
        </InArgument>
      </ui:StartProcess.Arguments>
      <ui:StartProcess.FileName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_321">strPythonPath</CSharpValue>
        </InArgument>
      </ui:StartProcess.FileName>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:StartProcess>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Loop through only the databases we care about" DisplayName="For Each currentText" sap:VirtualizedContainerService.HintSize="479,536" sap2010:WorkflowViewState.IdRef="ForEach`1_4">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="currentText" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,375" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info">
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">"Run sqlite to csv " + strPythonPath + " \"" + strDesktopPath + "\\" + strScript2FileName + "\" " + "\""+strUserPath +"\\HealthData\\DBs\\"+ currentText + "\" " + "\"" + strDesktopPath+ "\\" + strCSVOutputFolderName + "\" "</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <ui:StartProcess WorkingDirectory="{x:Null}" sap2010:Annotation.AnnotationText="Run sqlite to csv conversion script on databasse x" DisplayName="Start Process" sap:VirtualizedContainerService.HintSize="382,142" sap2010:WorkflowViewState.IdRef="StartProcess_2" StartType="Synchronously" Timeout="999999999">
              <ui:StartProcess.Arguments>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_324">strDesktopPath + "\\" + strScript2FileName + " " + "\""+strUserPath +"\\HealthData\\DBs\\"+ currentText + "\" " + "\"" + strDesktopPath+ "\\" + strCSVOutputFolderName + "\" "</CSharpValue>
                </InArgument>
              </ui:StartProcess.Arguments>
              <ui:StartProcess.FileName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_323">strPythonPath</CSharpValue>
                </InArgument>
              </ui:StartProcess.FileName>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:StartProcess>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.Values>
        <InArgument x:TypeArguments="sc:IEnumerable">
          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">arrDBNames</CSharpValue>
        </InArgument>
      </ui:ForEach.Values>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="479,173" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">"Pull CSVs"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <Parallel DisplayName="Parallel Pull CSVs" sap:VirtualizedContainerService.HintSize="479,84" sap2010:WorkflowViewState.IdRef="Parallel_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadCsvFile PathResource="{x:Null}" Delimitator="Semicolon" DelimitatorForViewModel="Semicolon" DisplayName="Read CSV" sap:VirtualizedContainerService.HintSize="474,154" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1">
        <ui:ReadCsvFile.DataTable>
          <OutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_117">dtresting_hr</CSharpReference>
          </OutArgument>
        </ui:ReadCsvFile.DataTable>
        <ui:ReadCsvFile.FilePath>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_407">strDesktopPath+"\\" +strCSVOutputFolderName+"\\"+arrCSVFiles[4]</CSharpValue>
          </InArgument>
        </ui:ReadCsvFile.FilePath>
      </ui:ReadCsvFile>
      <ui:ReadCsvFile PathResource="{x:Null}" Delimitator="Semicolon" DelimitatorForViewModel="Semicolon" DisplayName="Read CSV" sap:VirtualizedContainerService.HintSize="474,154" sap2010:WorkflowViewState.IdRef="ReadCsvFile_3">
        <ui:ReadCsvFile.DataTable>
          <OutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_119">dtmonitoring_rr</CSharpReference>
          </OutArgument>
        </ui:ReadCsvFile.DataTable>
        <ui:ReadCsvFile.FilePath>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_409">strDesktopPath+"\\" +strCSVOutputFolderName+"\\"+arrCSVFiles[2]</CSharpValue>
          </InArgument>
        </ui:ReadCsvFile.FilePath>
      </ui:ReadCsvFile>
      <ui:ReadCsvFile PathResource="{x:Null}" Delimitator="Semicolon" DelimitatorForViewModel="Semicolon" DisplayName="Read CSV" sap:VirtualizedContainerService.HintSize="474,154" sap2010:WorkflowViewState.IdRef="ReadCsvFile_5">
        <ui:ReadCsvFile.DataTable>
          <OutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_121">dtstress</CSharpReference>
          </OutArgument>
        </ui:ReadCsvFile.DataTable>
        <ui:ReadCsvFile.FilePath>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_411">strDesktopPath+"\\" +strCSVOutputFolderName+"\\"+arrCSVFiles[6]</CSharpValue>
          </InArgument>
        </ui:ReadCsvFile.FilePath>
      </ui:ReadCsvFile>
      <ui:ReadCsvFile PathResource="{x:Null}" Delimitator="Semicolon" DelimitatorForViewModel="Semicolon" DisplayName="Read CSV" sap:VirtualizedContainerService.HintSize="474,154" sap2010:WorkflowViewState.IdRef="ReadCsvFile_7">
        <ui:ReadCsvFile.DataTable>
          <OutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_123">dtsleep_events</CSharpReference>
          </OutArgument>
        </ui:ReadCsvFile.DataTable>
        <ui:ReadCsvFile.FilePath>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_413">strDesktopPath+"\\" +strCSVOutputFolderName+"\\"+arrCSVFiles[7]</CSharpValue>
          </InArgument>
        </ui:ReadCsvFile.FilePath>
      </ui:ReadCsvFile>
      <ui:ReadCsvFile PathResource="{x:Null}" Delimitator="Semicolon" DelimitatorForViewModel="Semicolon" DisplayName="Read CSV" sap:VirtualizedContainerService.HintSize="474,154" sap2010:WorkflowViewState.IdRef="ReadCsvFile_8">
        <ui:ReadCsvFile.DataTable>
          <OutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_124">dtmonitoring</CSharpReference>
          </OutArgument>
        </ui:ReadCsvFile.DataTable>
        <ui:ReadCsvFile.FilePath>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_414">strDesktopPath+"\\" +strCSVOutputFolderName+"\\"+arrCSVFiles[0]</CSharpValue>
          </InArgument>
        </ui:ReadCsvFile.FilePath>
      </ui:ReadCsvFile>
      <ui:ReadCsvFile PathResource="{x:Null}" Delimitator="Semicolon" DelimitatorForViewModel="Semicolon" DisplayName="Read CSV" sap:VirtualizedContainerService.HintSize="474,154" sap2010:WorkflowViewState.IdRef="ReadCsvFile_6">
        <ui:ReadCsvFile.DataTable>
          <OutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_122">dtmonitoring_hr</CSharpReference>
          </OutArgument>
        </ui:ReadCsvFile.DataTable>
        <ui:ReadCsvFile.FilePath>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_412">strDesktopPath+"\\" +strCSVOutputFolderName+"\\"+arrCSVFiles[1]</CSharpValue>
          </InArgument>
        </ui:ReadCsvFile.FilePath>
      </ui:ReadCsvFile>
      <ui:ReadCsvFile PathResource="{x:Null}" Delimitator="Semicolon" DelimitatorForViewModel="Semicolon" DisplayName="Read CSV" sap:VirtualizedContainerService.HintSize="474,154" sap2010:WorkflowViewState.IdRef="ReadCsvFile_4">
        <ui:ReadCsvFile.DataTable>
          <OutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_120">dtsleep</CSharpReference>
          </OutArgument>
        </ui:ReadCsvFile.DataTable>
        <ui:ReadCsvFile.FilePath>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_410">strDesktopPath+"\\" +strCSVOutputFolderName+"\\"+arrCSVFiles[5]</CSharpValue>
          </InArgument>
        </ui:ReadCsvFile.FilePath>
      </ui:ReadCsvFile>
      <ui:ReadCsvFile PathResource="{x:Null}" Delimitator="Semicolon" DelimitatorForViewModel="Semicolon" DisplayName="Read CSV" sap:VirtualizedContainerService.HintSize="474,154" sap2010:WorkflowViewState.IdRef="ReadCsvFile_2">
        <ui:ReadCsvFile.DataTable>
          <OutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_118">dtdaily_summary</CSharpReference>
          </OutArgument>
        </ui:ReadCsvFile.DataTable>
        <ui:ReadCsvFile.FilePath>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_408">strDesktopPath+"\\" +strCSVOutputFolderName+"\\"+arrCSVFiles[3]</CSharpValue>
          </InArgument>
        </ui:ReadCsvFile.FilePath>
      </ui:ReadCsvFile>
    </Parallel>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="479,173" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_356">"Run Filtering Code"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <Parallel sap2010:Annotation.AnnotationText="Filter the data tables to only return the last two days worth of records" DisplayName="Parallel Run Filter Code" sap:VirtualizedContainerService.HintSize="479,141" sap2010:WorkflowViewState.IdRef="Parallel_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeCode Code="dtOut = (From row In dtIn.AsEnumerable()&#xA;                         Let timestamp = DateTime.ParseExact(row(&quot;timestamp&quot;).ToString().Trim(), &quot;yyyy-MM-dd HH:mm:ss.ffffff&quot;, System.Globalization.CultureInfo.InvariantCulture)&#xA;                         Where timestamp &gt;= DateTime.Today.AddDays(intDays)&#xA;                         Select row).CopyToDataTable()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; " ContinueOnError="True" DisplayName="Invoke Monitoring Filter Code" sap:VirtualizedContainerService.HintSize="374,165" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="dtIn">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_336">dtmonitoring</CSharpValue>
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtOut">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_93">dtmonitoring_filtered</CSharpReference>
          </OutArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="intDays">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_360">intDays</CSharpValue>
          </InArgument>
        </ui:InvokeCode.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeCode>
      <ui:InvokeCode Code="dtOut = (From row In dtIn.AsEnumerable()&#xA;                         Let timestamp = DateTime.ParseExact(row(&quot;timestamp&quot;).ToString().Trim(), &quot;yyyy-MM-dd HH:mm:ss.ffffff&quot;, System.Globalization.CultureInfo.InvariantCulture)&#xA;                         Where timestamp &gt;= DateTime.Today.AddDays(intDays)&#xA;                         Select row).CopyToDataTable()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; " ContinueOnError="True" DisplayName="Invoke RR Filter Code" sap:VirtualizedContainerService.HintSize="374,165" sap2010:WorkflowViewState.IdRef="InvokeCode_6">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="dtIn">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_338">dtmonitoring_rr</CSharpValue>
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtOut">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_101">dtmonitoring_rr_filtered</CSharpReference>
          </OutArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="intDays">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_361">intDays</CSharpValue>
          </InArgument>
        </ui:InvokeCode.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeCode>
      <ui:InvokeCode Code="dtOut = (From row In dtIn.AsEnumerable()&#xA;                         Let timestamp = DateTime.ParseExact(row(&quot;timestamp&quot;).ToString().Trim(), &quot;yyyy-MM-dd HH:mm:ss.ffffff&quot;, System.Globalization.CultureInfo.InvariantCulture)&#xA;                         Where timestamp &gt;= DateTime.Today.AddDays(intDays)&#xA;                         Select row).CopyToDataTable()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; " ContinueOnError="True" DisplayName="Invoke Stress Filter Code" sap:VirtualizedContainerService.HintSize="374,165" sap2010:WorkflowViewState.IdRef="InvokeCode_9">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="dtIn">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_341">dtstress</CSharpValue>
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtOut">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_98">dtstress_filtered</CSharpReference>
          </OutArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="intDays">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_362">intDays</CSharpValue>
          </InArgument>
        </ui:InvokeCode.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeCode>
      <ui:InvokeCode Code="dtOut = (From row In dtIn.AsEnumerable()&#xA;                         Let day = DateTime.ParseExact(row(&quot;day&quot;).ToString().Trim(), &quot;yyyy-MM-dd&quot;, System.Globalization.CultureInfo.InvariantCulture)&#xA;                         Where day &gt;= DateTime.Today.AddDays(intDays)&#xA;                         Select row).CopyToDataTable()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; " ContinueOnError="True" DisplayName="Invoke Sleep Filter Code" sap:VirtualizedContainerService.HintSize="374,165" sap2010:WorkflowViewState.IdRef="InvokeCode_7">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="dtIn">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_339">dtsleep</CSharpValue>
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtOut">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_96">dtsleep_filtered</CSharpReference>
          </OutArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="intDays">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_363">intDays</CSharpValue>
          </InArgument>
        </ui:InvokeCode.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeCode>
      <ui:InvokeCode Code="dtOut = (From row In dtIn.AsEnumerable()&#xA;                         Let day = DateTime.ParseExact(row(&quot;day&quot;).ToString().Trim(), &quot;yyyy-MM-dd&quot;, System.Globalization.CultureInfo.InvariantCulture)&#xA;                         Where day &gt;= DateTime.Today.AddDays(intDays)&#xA;                         Select row).CopyToDataTable()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; " ContinueOnError="True" DisplayName="Invoke Daily Summary Filter Code" sap:VirtualizedContainerService.HintSize="374,165" sap2010:WorkflowViewState.IdRef="InvokeCode_8">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="dtIn">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_340">dtdaily_summary</CSharpValue>
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtOut">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_97">dtdaily_summary_filtered</CSharpReference>
          </OutArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="intDays">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_364">intDays</CSharpValue>
          </InArgument>
        </ui:InvokeCode.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeCode>
      <ui:InvokeCode Code="dtOut = (From row In dtIn.AsEnumerable()&#xA;                         Let timestamp = DateTime.ParseExact(row(&quot;timestamp&quot;).ToString().Trim(), &quot;yyyy-MM-dd HH:mm:ss.ffffff&quot;, System.Globalization.CultureInfo.InvariantCulture)&#xA;                         Where timestamp &gt;= DateTime.Today.AddDays(intDays)&#xA;                         Select row).CopyToDataTable()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; " ContinueOnError="True" DisplayName="Invoke Sleep Events Code" sap:VirtualizedContainerService.HintSize="374,165" sap2010:WorkflowViewState.IdRef="InvokeCode_10">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="dtIn">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_342">dtsleep_events</CSharpValue>
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtOut">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_99">dtsleep_events_filtered</CSharpReference>
          </OutArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="intDays">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_365">intDays</CSharpValue>
          </InArgument>
        </ui:InvokeCode.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeCode>
      <ui:InvokeCode Code="dtOut = (From row In dtIn.AsEnumerable()&#xA;                         Let timestamp = DateTime.ParseExact(row(&quot;timestamp&quot;).ToString().Trim(), &quot;yyyy-MM-dd HH:mm:ss.ffffff&quot;, System.Globalization.CultureInfo.InvariantCulture)&#xA;                         Where timestamp &gt;= DateTime.Today.AddDays(intDays)&#xA;                         Select row).CopyToDataTable()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; " ContinueOnError="True" DisplayName="Invoke HR Filter Code" sap:VirtualizedContainerService.HintSize="374,165" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="dtIn">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_353">dtmonitoring_hr</CSharpValue>
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtOut">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_102">dtmonitoring_hr_filtered</CSharpReference>
          </OutArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="intDays">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_366">intDays</CSharpValue>
          </InArgument>
        </ui:InvokeCode.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeCode>
      <ui:InvokeCode Code="dtOut = (From row In dtIn.AsEnumerable()&#xA;                         Let day = DateTime.ParseExact(row(&quot;day&quot;).ToString().Trim(), &quot;yyyy-MM-dd&quot;, System.Globalization.CultureInfo.InvariantCulture)&#xA;                         Where day &gt;= DateTime.Today.AddDays(intDays)&#xA;                         Select row).CopyToDataTable()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; " ContinueOnError="True" DisplayName="Invoke Resting HR Filter Code" sap:VirtualizedContainerService.HintSize="374,165" sap2010:WorkflowViewState.IdRef="InvokeCode_11">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="dtIn">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_343">dtresting_hr</CSharpValue>
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtOut">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_100">dtresting_hr_filtered</CSharpReference>
          </OutArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="intDays">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_367">intDays</CSharpValue>
          </InArgument>
        </ui:InvokeCode.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeCode>
    </Parallel>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="479,173" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_406" xml:space="preserve">"dtmonitoring:\t" + dtmonitoring.RowCount().ToString() + "\n" +
"dtMonitoringFiltered:\t" + dtmonitoring_filtered.RowCount().ToString() + "\n\n" +
"dtdaily_summary:\t" + dtdaily_summary.RowCount().ToString() + "\n" +
"dtdaily_summary_filtered:\t" + dtdaily_summary_filtered.RowCount().ToString() + "\n\n" +
"dtmonitoring_rr:\t" + dtmonitoring_rr_filtered.RowCount().ToString() + "\n" +
"dtmonitoring_rr_filtered:\t" + dtmonitoring_rr_filtered.RowCount().ToString() + "\n\n" +
"dtmonitoring_hr:\t" + dtmonitoring_hr_filtered.RowCount().ToString() + "\n" +
"dtmonitoring_hr_filtered:\t" + dtmonitoring_hr_filtered.RowCount().ToString() + "\n\n" +
"dtsleep:\t" + dtsleep.RowCount().ToString() + "\n" +
"dtsleep_filtered:\t" + dtsleep_filtered.RowCount().ToString() + "\n\n" +
"dtsleep_events\t" + dtsleep_events.RowCount().ToString() + "\n" +
"dtsleep_event_filtereds:\t" + dtsleep_events_filtered.RowCount().ToString() + "\n\n" +
"dtstress:\t" + dtstress.RowCount().ToString() + "\n" +
"dtstress_filtered:\t" + dtstress_filtered.RowCount().ToString() + "\n\n" +
"dtresting_hr:\t" + dtresting_hr.RowCount().ToString() + "\n" +
"dtresting_hr_filtered:\t" + dtresting_hr_filtered.RowCount().ToString()</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <If sap:VirtualizedContainerService.HintSize="479,931" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_368">strDBType.Contains("Influx")</CSharpValue>
        </InArgument>
      </If.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,401" sap2010:WorkflowViewState.IdRef="Sequence_28">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info">
            <ui:LogMessage.Message>
              <InArgument x:TypeArguments="x:Object">
                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_377">"Running InfluxDB Upload"</CSharpValue>
              </InArgument>
            </ui:LogMessage.Message>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfluxDB - Invoke Workflow File (InfluxDB.xaml)" sap:VirtualizedContainerService.HintSize="382,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="InfluxDB.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtdaily_summary_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_369">dtdaily_summary_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtmonitoring_hr_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_370">dtmonitoring_hr_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtmonitoring_rr_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_371">dtmonitoring_rr_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtsleep_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_372">dtsleep_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtresting_hr_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_373">dtresting_hr_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtstress_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_374">dtstress_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtsleep_events_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_375">dtsleep_events_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtmonitoring_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_376">dtmonitoring_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="s:String[]" x:Key="arrCSVNames">
                <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_404">arrCSVNames</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="strPythonPath">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_397">strPythonPath</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="strDesktopPath">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_399">strDesktopPath</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="strScript3FileName">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_400">strScript3FileName</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="strCSVOutputFolderName">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_401">strCSVOutputFolderName</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="strInfluxBucket">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_402">strInfluxBucket</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="s:String[]" x:Key="arrCSVFiles">
                <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_405">arrCSVFiles</CSharpValue>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,401" sap2010:WorkflowViewState.IdRef="Sequence_29">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info">
            <ui:LogMessage.Message>
              <InArgument x:TypeArguments="x:Object">
                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_380">"Running MSSQL Upload"</CSharpValue>
              </InArgument>
            </ui:LogMessage.Message>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MSSQL - Invoke Workflow File (MSSQL.xaml)" sap:VirtualizedContainerService.HintSize="382,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="MSSQL.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtdaily_summary_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_381">dtdaily_summary_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtmonitoring_hr_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_382">dtmonitoring_hr_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtmonitoring_rr_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_383">dtmonitoring_rr_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtsleep_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_384">dtsleep_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtresting_hr_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_385">dtresting_hr_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtstress_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_386">dtstress_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtsleep_events_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_387">dtsleep_events_filtered</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtmonitoring_filtered">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_388">dtmonitoring_filtered</CSharpValue>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>